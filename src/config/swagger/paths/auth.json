{
  "/api/auth/login": {
    "post": {
      "summary": "Authenticate a user",
      "description": "Authenticate a user with email and password and return user data",
      "tags": ["Authentication"],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LoginRequest"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Login successful",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  { "$ref": "#/components/schemas/LoginResponse" },
                  { "$ref": "#/components/schemas/MfaRequiredResponse" }
                ]
              }
            }
          }
        },
        "400": {
          "description": "Invalid input",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "401": {
          "description": "Invalid credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    }
  },
  "/api/auth/logout": {
    "post": {
      "summary": "End a user session",
      "description": "End the current user session and clear authentication cookies",
      "tags": ["Authentication"],
      "responses": {
        "200": {
          "description": "Logout successful",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuccessResponse"
              }
            }
          }
        },
        "400": {
          "description": "Error during logout",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    }
  },
  "/api/auth/signup": {
    "post": {
      "summary": "Register a new user and create profile",
      "description": "Create a new user account with email, password, and profile information. This endpoint handles both user creation and profile creation in a single request (replaces the deprecated /api/profiles/create endpoint).",
      "tags": ["Authentication"],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SignupRequest"
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "User created successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupResponse"
              }
            }
          }
        },
        "400": {
          "description": "Invalid input or email already in use",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    }
  },
  "/api/auth/verify": {
    "get": {
      "summary": "Verify a user's authentication token",
      "description": "Verify the current user's authentication token and return user data",
      "tags": ["Authentication"],
      "security": [
        {
          "cookieAuth": []
        }
      ],
      "responses": {
        "200": {
          "description": "Token is valid",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": true
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string",
                        "format": "email"
                      },
                      "firstName": {
                        "type": "string"
                      },
                      "lastName": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Invalid token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    }
  },
  "/api/auth/reset-password": {
    "post": {
      "summary": "Request a password reset email",
      "description": "Send a password reset email to the specified email address",
      "tags": ["Authentication"],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ResetPasswordRequest"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Password reset email sent",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": true
                  },
                  "message": {
                    "type": "string",
                    "example": "Password reset email sent successfully"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid email format",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false
                  },
                  "message": {
                    "type": "string",
                    "example": "Invalid request format"
                  },
                  "error": {
                    "type": "string",
                    "example": "Error message details"
                  }
                }
              }
            }
          }
        },
        "429": {
          "description": "Rate limit exceeded",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false
                  },
                  "message": {
                    "type": "string",
                    "example": "Failed to send password reset email"
                  },
                  "error": {
                    "type": "string",
                    "example": "Rate limit exceeded"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false
                  },
                  "message": {
                    "type": "string",
                    "example": "An unexpected error occurred while processing your request"
                  },
                  "error": {
                    "type": "string",
                    "example": "Error message details"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "/api/auth/update-password": {
    "post": {
      "summary": "Update password after reset",
      "description": "Update a user's password after receiving a password reset email",
      "tags": ["Authentication"],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpdatePasswordRequest"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Password updated successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuccessResponse"
              }
            }
          }
        },
        "400": {
          "description": "Invalid password format",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "401": {
          "description": "Invalid or expired token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    }
  },
  "/api/auth/mfa/status": {
    "get": {
      "summary": "Get MFA status",
      "description": "Get the current MFA status for the authenticated user",
      "tags": ["Authentication"],
      "security": [
        {
          "cookieAuth": []
        }
      ],
      "responses": {
        "200": {
          "description": "MFA status retrieved successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": true
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "mfaEnabled": {
                        "type": "boolean",
                        "description": "Whether MFA is enabled for the user",
                        "example": true
                      },
                      "factors": {
                        "type": "array",
                        "description": "List of verified MFA factors for the user",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The factor ID needed for disabling MFA",
                              "example": "totp_123456789"
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of MFA factor",
                              "example": "totp"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Not authenticated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    }
  },
  "/api/auth/mfa/enroll": {
    "post": {
      "summary": "Enroll in MFA",
      "description": "Enroll the authenticated user in multi-factor authentication",
      "tags": ["Authentication"],
      "security": [
        {
          "cookieAuth": []
        }
      ],
      "responses": {
        "200": {
          "description": "MFA enrollment initiated successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": true
                  },
                  "factorId": {
                    "type": "string"
                  },
                  "qrCode": {
                    "type": "string",
                    "description": "Base64 encoded QR code image"
                  },
                  "secret": {
                    "type": "string",
                    "description": "TOTP secret for manual entry"
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Not authenticated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    }
  },
  "/api/auth/mfa/challenge": {
    "post": {
      "summary": "Challenge MFA",
      "description": "Challenge a user to provide MFA verification during login",
      "tags": ["Authentication"],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["sessionId"],
              "properties": {
                "sessionId": {
                  "type": "string",
                  "description": "Session ID from login response"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "MFA challenge initiated successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": true
                  },
                  "challengeId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid session ID",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    }
  },
  "/api/auth/mfa/verify": {
    "post": {
      "summary": "Verify MFA challenge",
      "description": "Verify an MFA challenge with a TOTP code",
      "tags": ["Authentication"],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["challengeId", "code"],
              "properties": {
                "challengeId": {
                  "type": "string",
                  "description": "Challenge ID from MFA challenge response"
                },
                "code": {
                  "type": "string",
                  "description": "TOTP code from authenticator app"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "MFA verification successful",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": true
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string",
                        "format": "email"
                      },
                      "firstName": {
                        "type": "string"
                      },
                      "lastName": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid challenge ID or code",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "401": {
          "description": "Invalid or expired challenge",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    }
  },
  "/api/auth/mfa/disable": {
    "post": {
      "summary": "Disable MFA",
      "description": "Disable multi-factor authentication for the authenticated user. The required factorId can be obtained from the /api/auth/mfa/status endpoint.",
      "tags": ["Authentication"],
      "security": [
        {
          "cookieAuth": []
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["factorId"],
              "properties": {
                "factorId": {
                  "type": "string",
                  "description": "The ID of the MFA factor to disable. This can be obtained from the /api/auth/mfa/status endpoint.",
                  "example": "totp_123456789"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "MFA disabled successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Not authenticated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    }
  },
  "/api/auth/update-email": {
    "post": {
      "summary": "Update email address",
      "description": "Initiate the process to update a user's email address",
      "tags": ["Authentication"],
      "security": [
        {
          "cookieAuth": []
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["newEmail"],
              "properties": {
                "newEmail": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Email update process initiated",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid email format or email already in use",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "401": {
          "description": "Not authenticated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    }
  },
  "/api/auth/check-email-change": {
    "get": {
      "summary": "Check email change status",
      "description": "Check if the authenticated user has a pending email change",
      "tags": ["Authentication"],
      "security": [
        {
          "cookieAuth": []
        }
      ],
      "responses": {
        "200": {
          "description": "Email change status retrieved",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": true
                  },
                  "hasPendingChange": {
                    "type": "boolean"
                  },
                  "newEmail": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Not authenticated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    }
  },
  "/api/auth/sync-email-change": {
    "post": {
      "summary": "Sync email change",
      "description": "Synchronize email change status for the authenticated user",
      "tags": ["Authentication"],
      "security": [
        {
          "cookieAuth": []
        }
      ],
      "responses": {
        "200": {
          "description": "Email change status synced",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": true
                  },
                  "hasPendingChange": {
                    "type": "boolean"
                  },
                  "newEmail": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Not authenticated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    }
  },
  "/api/auth/complete-email-change": {
    "post": {
      "summary": "Complete email change",
      "description": "Complete the email change process using a token",
      "tags": ["Authentication"],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["token"],
              "properties": {
                "token": {
                  "type": "string",
                  "description": "Email change confirmation token"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Email change completed successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    }
  },
  "/api/auth/resend-verification": {
    "post": {
      "summary": "Resend verification email",
      "description": "Resend the email verification link to a user who hasn't verified their account yet",
      "tags": ["Authentication"],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["email"],
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "Email address of the user who needs verification"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Verification email resent successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": true
                  },
                  "message": {
                    "type": "string",
                    "example": "Verification email has been resent. Please check your inbox."
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid input",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    }
  }
}
